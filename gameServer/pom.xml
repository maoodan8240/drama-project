<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>com.drama</groupId>
        <artifactId>aggregator</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../aggregator/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>gameServer</artifactId>

    <!--    <build>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-jar-plugin</artifactId>-->
    <!--                <version>2.6</version>-->
    <!--                <configuration>-->
    <!--                    <archive>-->
    <!--                        <manifest>-->
    <!--                            <addClasspath>true</addClasspath>-->
    <!--                            <classpathPrefix>lib/</classpathPrefix>-->
    <!--                            <mainClass>drama.gameServer.Launcher</mainClass>-->
    <!--                        </manifest>-->
    <!--                    </archive>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-dependency-plugin</artifactId>-->
    <!--                <version>2.10</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>copy-dependencies</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>copy-dependencies</goal>-->
    <!--                        </goals>-->
    <!--                        <configuration>-->
    <!--                            <outputDirectory>${project.build.directory}/lib</outputDirectory>-->
    <!--                        </configuration>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-surefire-plugin</artifactId>-->
    <!--                <version>2.12.4</version>-->
    <!--                <configuration>-->
    <!--                    <testFailureIgnore>true</testFailureIgnore>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->
    <!--    <build>-->
    <!--        <finalName>${project.artifactId}</finalName>-->
    <!--        <plugins>-->
    <!--            &lt;!&ndash; 跳过单元测试 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-surefire-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    <skipTests>true</skipTests>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash;使用docker-maven-plugin插件&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>com.spotify</groupId>-->
    <!--                <artifactId>docker-maven-plugin</artifactId>-->
    <!--                <version>1.0.0</version>-->
    <!--                &lt;!&ndash;将插件绑定在某个phase执行&ndash;&gt;-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>build-image</id>-->
    <!--                        &lt;!&ndash;用户只需执行mvn package ，就会自动执行mvn docker:build&ndash;&gt;-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>build</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    &lt;!&ndash;指定生成的镜像名&ndash;&gt;-->
    <!--                    <imageName>fred/${project.artifactId}</imageName>-->
    <!--                    &lt;!&ndash;指定标签&ndash;&gt;-->
    <!--                    <imageTags>-->
    <!--                        <imageTag>latest</imageTag>-->
    <!--                    </imageTags>-->
    <!--                    &lt;!&ndash; 指定 Dockerfile 路径&ndash;&gt;-->
    <!--                    <dockerDirectory>gameServer/</dockerDirectory>-->
    <!--                    &lt;!&ndash;指定远程 docker api地址&ndash;&gt;-->
    <!--                    <dockerHost>http://10.0.2.116:2375</dockerHost>-->
    <!--                    &lt;!&ndash; 这里是复制 jar 包到 docker 容器指定目录配置 &ndash;&gt;-->
    <!--                    <resources>-->
    <!--                        <resource>-->
    <!--                            <targetPath>/</targetPath>-->
    <!--                            &lt;!&ndash;jar 包所在的路径  此处配置的 即对应 target 目录&ndash;&gt;-->
    <!--                            <directory>${project.build.directory}</directory>-->
    <!--                            &lt;!&ndash; 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名 &ndash;&gt;-->
    <!--                            <include>${project.build.finalName}.jar</include>-->
    <!--                        </resource>-->
    <!--                    </resources>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->
    <dependencies>
        <dependency>
            <groupId>com.drama</groupId>
            <artifactId>relationship</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>
